Notes for creating, pushing and merging branches
1. Before creating a feature branch, make sure the main branch is committed. 
2. Now create a new branch and switch to that branch to make changes.
3. When feature is added and functional, add and commit in the terminal.
4. Once the changes have been committed, push to github with `git push + authorname + branchname`
    For example `git push gt changeReadme` or `git push origin addCSS` or `git push bl makeDivs`
    To check the author name, type `git remote -v` in the terminal and it will print out a few lines - the author name will be at the beginning of those lines.
5. Go to the GitHub repo and click on the green button that says "Compare & pull request"
*** If the green "Compare & pull request" button isn't at the top of the page, try refreshing the page.
    If it's still not there, click "# branches" at the top of the list of files, click "New pull request" for the branch to merge in, the base should be the main branch, the compare should be the branch to merge in, then follow the next steps.
6. Add any notes about the pull request that might be important (what did you change, why did you change it, etc.)
7. Click on the "Create pull request" button
    After clicking "Create pull request", the next step might be further down on the page. Scroll if you don't see it.
8. Click the "Merge pull request" button
9. Click "Confirm merge"
10. Once the page updates, click "Delete branch" to delete the branch from the remote repo (optional)
11. Go back to the local terminal (terminal in VS code or command line) and switch into the main branch 
12. Pull the changes down from GitHub using the command `git pull authorname main`
    For example `git pull tg main` or `git pull origin main` or `git pull bl main`
    Before you pull the changes down, you can check the author name by typing `git remote -v`
13. Make sure that the site works correctly from the main branch. Once it is confirmed that the main branch now has the integrated code and works correctly in the browser, the feature branch can be deleted with the command `git branch -D branchname`
    For example `git branch -D addCss` or `git branch -D changeReadme`
    
/*
POSSIBLE COLOR SCHEME

INDIGO / DARKER PURPLE
HTML/HEX code:	#4c5c76	
RGB code:	rgb(76, 92, 118)	

DARKER PURPLE
HTML/HEX code:	#74748c	
RGB code:	rgb(116, 116, 140)	

DARKER PURPLE
HTML/HEX code:	#6c7c8a	
RGB code:	rgb(108, 124, 138)	

MIDHTML/HEX code:	#aca4b4	
RGB code:	rgb(172, 164, 180)	

LAVENDER / LIGHT PURPLE
HTML/HEX code:	#8e97a4	
RGB code:	rgb(142, 151, 164)	

DARK BLUEHTML/HEX code:	#142648	
RGB code:	rgb(20, 38, 72)	

SLATE GREY / LIGHT BLUE-PURPLE 1 
HTML/HEX code:	#bbcbd2	
RGB code:	rgb(187, 203, 210)	

SLATE GREY / LIGHT BLUE-PURPLE 1 
HTML/HEX code:	#bbced6	
RGB code:	rgb(187, 206, 214)	

DARK PINK
HTML/HEX code:	#ebbcc4	
RGB code:	rgb(235, 188, 196)	

LIGHT PINK
HTML/HEX code:	#e7dada	
RGB code:	rgb(231, 218, 218)	

DUSTY ORANGE
HTML/HEX code:	#dc9c55	
RGB code:	rgb(220, 156, 85)	

PEACH
HTML/HEX code:	#eccb9c	
RGB code:	rgb(236, 203, 156)	
*/

Smooth Scrolling Code:
    <script>
      window.smoothScroll = function (target) {
        let scrollContainer = target;
        do { //find scroll container
          scrollContainer = scrollContainer.parentNode;
          if (!scrollContainer) return;
          scrollContainer.scrollTop += 1;
        } while (scrollContainer.scrollTop == 0);

        let targetY = 0;
        do { //find the top of target relatively to the container
          if (target == scrollContainer) break;
          targetY += target.offsetTop;
        } while (target = target.offsetParent);

        scroll = function (c, a, b, i) {
          i++; if (i > 30) return;
          c.scrollTop = a + (b - a) / 30 * i;
          setTimeout(function () { scroll(c, a, b, i); }, 20);
        }
        // start scrolling
        scroll(scrollContainer, scrollContainer.scrollTop, targetY, 0);
      }
    </script>
      // <button onclick="window.smoothScroll(document.getElementById('bird-icon'))"></button>

Home button onclick href:
    <div style="align-items: right;">
      <button style=" position: absolute; top: 15px; right: 18px; margin: 10px; z-index: 1000 " id="home-button"
      class="ui inverted orange button" onclick="window.location.href='#bird-icon'">Home</button>
    </div>

Navigation Alternatives:
<nav>
      <ul>
        <li><a href="#bird-icon">Home</a></li>
        <li><a href="#play-position">Play</a></li>
        <li><a href="#about">About</a></li>
        <li><a href="#learn">Learn</a></li>
        <li><a href="#contact">Contact</a></li>

      </ul>
    </nav>

    <div class="mini ui vertical buttons"
      style=" position: absolute; top: 20px; right: 18px; margin: 10px; z-index: 1000; ">
      <button class="mini ui inverted orange button"><a href="#bird-icon">Home</a></button>
      <button class="mini ui inverted orange button"><a href="#play-position">Play</a></button>
      <button class="mini ui inverted orange button"><a href="#about">About</a></button>
      <button class="mini ui inverted orange button"><a href="#learn">Learn</a></button>
      <button class="mini ui inverted orange button"><a href="#contact">Contact</a></button>
    </div>